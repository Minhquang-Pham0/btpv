#!/bin/bash

set -e  # Exit on error

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Log functions
log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Install system dependencies for RHEL 8
install_system_deps() {
    log_info "Installing system dependencies..."
    
    # Enable PowerTools repository (required for some dependencies)
    dnf config-manager --set-enabled powertools
    
    # Enable EPEL
    dnf install -y epel-release

    # Install development tools
    dnf group install -y "Development Tools"
    
    # Install Python 3.9 from EPEL
    dnf module enable -y python39
    dnf install -y python39 python39-devel
    
    # Install PostgreSQL 13 from official repository
    dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm
    dnf -qy module disable postgresql
    dnf install -y postgresql13-server postgresql13-contrib postgresql13-devel
    
    # Additional required dependencies
    dnf install -y openssl-devel libffi-devel
}

# Configure PostgreSQL 13
setup_database() {
    log_info "Setting up PostgreSQL..."
    
    # Initialize PostgreSQL 13 if not already initialized
    if [ ! -f /var/lib/pgsql/13/data/postgresql.conf ]; then
        /usr/pgsql-13/bin/postgresql-13-setup initdb
    fi

    # Configure pg_hba.conf
    cat > /var/lib/pgsql/13/data/pg_hba.conf << EOF
# Generated by password-vault installer
local   all             postgres                                peer
local   all             all                                     md5
host    all             all             127.0.0.1/32            md5
host    all             all             ::1/128                 md5
EOF

    # Configure postgresql.conf
    cat > /var/lib/pgsql/13/data/postgresql.conf << EOF
listen_addresses = 'localhost'
port = 5432
max_connections = 100
shared_buffers = 128MB
dynamic_shared_memory_type = posix
max_wal_size = 1GB
min_wal_size = 80MB
log_timezone = 'UTC'
datestyle = 'iso, mdy'
timezone = 'UTC'
lc_messages = 'en_US.UTF-8'
lc_monetary = 'en_US.UTF-8'
lc_numeric = 'en_US.UTF-8'
lc_time = 'en_US.UTF-8'
default_text_search_config = 'pg_catalog.english'
EOF

    # Start and enable PostgreSQL 13
    systemctl enable postgresql-13
    systemctl start postgresql-13

    # Wait for PostgreSQL to be ready
    log_info "Waiting for PostgreSQL to start..."
    for i in {1..30}; do
        if su - postgres -c "/usr/pgsql-13/bin/psql -c '\l'" >/dev/null 2>&1; then
            break
        fi
        sleep 1
    done
}

# Configure systemd service
setup_systemd() {
    log_info "Setting up systemd service..."
    cat > /etc/systemd/system/password-vault.service << EOF
[Unit]
Description=Password Vault Service
After=network.target postgresql-13.service

[Service]
User=${SERVICE_USER}
Group=${SERVICE_GROUP}
WorkingDirectory=${INSTALL_DIR}
Environment=PATH=${PYTHON_VENV}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
EnvironmentFile=${CONFIG_DIR}/.env
ExecStart=${PYTHON_VENV}/bin/uvicorn app.main:app --host 0.0.0.0 --port 8000
Restart=always

[Install]
WantedBy=multi-user.target
EOF

    systemctl daemon-reload
    systemctl enable password-vault
}

# Install SELinux policies for RHEL 8
setup_selinux() {
    if command -v selinuxenabled >/dev/null && selinuxenabled; then
        log_info "Configuring SELinux..."
        
        # Install SELinux tools
        dnf install -y policycoreutils-python-utils

        # Set appropriate contexts
        semanage fcontext -a -t httpd_sys_content_t "${INSTALL_DIR}(/.*)?"
        semanage fcontext -a -t httpd_sys_rw_content_t "${LOG_DIR}(/.*)?"
        semanage fcontext -a -t httpd_sys_rw_content_t "${DATA_DIR}(/.*)?"
        restorecon -Rv "${INSTALL_DIR}" "${LOG_DIR}" "${DATA_DIR}"
        
        # Allow network connections
        setsebool -P httpd_can_network_connect on
    fi
}

# Install Python dependencies with RHEL 8 compatible versions
install_python_deps() {
    log_info "Installing Python dependencies..."
    python3.9 -m venv "${PYTHON_VENV}"
    source "${PYTHON_VENV}/bin/activate"
    pip install --upgrade pip

    # Install explicitly versioned dependencies compatible with RHEL 8
    # RHEL 8 (Python 3.9) compatible versions
fastapi==0.95.2
uvicorn==0.21.1
python-jose[cryptography]==3.3.0
passlib[bcrypt]==1.7.4
python-multipart==0.0.5
sqlalchemy==1.4.41
alembic==1.8.1
python-dotenv==0.21.1
pydantic==1.10.9
psycopg2-binary==2.9.6
cryptography==39.0.1
email-validator==1.3.1